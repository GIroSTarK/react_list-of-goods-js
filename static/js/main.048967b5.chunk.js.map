{"version":3,"sources":["App.jsx","index.jsx"],"names":["SORT_FIELD_ALPHABET","SORT_FIELD_LENGTH","goodsFromServer","App","useState","sortField","setSortField","reverseField","setReverseField","preparedGoods","goods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKMA,EAAsB,WACtBC,EAAoB,SAEbC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA4BK,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACMC,EA5BR,SAA0BC,EAAOL,EAAWE,GAC1C,IAAME,EAAa,YAAOC,GAqB1B,OAnBIL,GACFI,EAAcE,MAAK,SAACC,EAAOC,GACzB,OAAQR,GACN,KAAKL,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXR,GACFE,EAAcO,UAGTP,EAMeQ,CACpBf,EACAG,EACAE,GAGF,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IAAG,SACD,UACA,CAAE,WAAYf,IAAcL,IAEhCqB,QAAS,kBAAMf,EAAaN,IAP9B,iCAYA,wBACEmB,KAAK,SACLD,UACEE,IAAG,SACD,aACA,CAAE,WAAYf,IAAcJ,IAEhCoB,QAAS,kBAAMf,EAAaL,IAP9B,4BAYA,wBACEkB,KAAK,SACLD,UACEE,IAAG,SACD,aACA,CAAE,YAAab,IAEnBc,QACE,kBACIb,GADGD,IARX,sBAgBEF,GAAaE,IACf,wBACEY,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPf,EAAa,IACbE,GAAgB,IALpB,sBAaF,6BACGC,EAAca,KAAI,SAAAC,GAAI,OACrB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YC/GnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.048967b5.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nconst SORT_FIELD_ALPHABET = 'alphabet';\nconst SORT_FIELD_LENGTH = 'length';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getPreparedGoods(goods, sortField, reverseField) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverseField) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverseField, setReverseField] = useState(false);\n  const preparedGoods = getPreparedGoods(\n    goodsFromServer,\n    sortField,\n    reverseField,\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            cn('button',\n              'is-info',\n              { 'is-light': sortField !== SORT_FIELD_ALPHABET })\n          }\n          onClick={() => setSortField(SORT_FIELD_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn('button',\n              'is-success',\n              { 'is-light': sortField !== SORT_FIELD_LENGTH })\n          }\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn('button',\n              'is-warning',\n              { 'is-light': !reverseField })\n          }\n          onClick={\n            () => (reverseField\n              ? setReverseField(false)\n              : setReverseField(true))\n          }\n        >\n          Reverse\n        </button>\n\n        {(sortField || reverseField) && (\n        <button\n          type=\"button\"\n          className=\"button is-danger is-light\"\n          onClick={() => {\n            setSortField('');\n            setReverseField(false);\n          }}\n        >\n          Reset\n        </button>\n        )}\n      </div>\n\n      <ul>\n        {preparedGoods.map(good => (\n          <li key={good} data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}